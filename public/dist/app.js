angular.module("userApp",["authService","mainCtrl","ngAnimate","app.routes","authService","userService","adminService","adminCtrl","profileCtrl"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptor")}]),angular.module("app.routes",["ngRoute"]).config(["$routeProvider","$locationProvider",function(e,t){e.when("/",{templateUrl:"views/home.html"}).when("/login",{templateUrl:"views/login.html",controller:"mainController",controllerAs:"login"}).when("/error",{templateUrl:"views/error.html"}).when("/admin/users",{templateUrl:"views/all.html",controller:"adminController",controllerAs:"admin",resolve:{message:["adminService",function(e){return e.isAdmin()}]}}).when("/admin/users/create",{templateUrl:"views/profile.html",controller:"createController",controllerAs:"profile",resolve:{message:["adminService",function(e){return e.isAdmin()}]}}).when("/admin/users/edit/:user_id",{templateUrl:"views/profile.html",controller:"editController",controllerAs:"profile",resolve:{message:["adminService",function(e){return e.isAdmin()}]}}).when("/admin/users/view/:user_id",{templateUrl:"views/profile.html",controller:"viewController",controllerAs:"profile",resolve:{message:["adminService",function(e){return e.isAdmin()}]}}).otherwise({redirectTo:"/login"}),t.html5Mode(!0)}]),angular.module("adminCtrl",["userService"]).controller("adminController",["User","Auth","message",function(e,t,r){console.log("message"+JSON.stringify(r));var o=this;o.init=function(){e.all().then(function(e){e.data.success&&(o.users=e.data.info),console.log(e.data.message)})},o.init(),o["delete"]=function(t){e["delete"](t).then(function(e){console.log(e.data.message),o.init()})}}]),angular.module("mainCtrl",[]).controller("mainController",["$rootScope","$location","$window","Auth",function(e,t,r,o){var n=this;n.loggedIn=o.isLoggedIn(),e.$on("$routeChangeError",function(e,r,o,n){console.log(n),t.path("/error")}),e.$on("$routeChangeStart",function(){n.loggedIn=o.isLoggedIn(),n.loggedIn&&r.localStorage.getItem("token")&&o.getUser().then(function(e){e.data.success&&(n.user=e.data.info,console.log(JSON.stringify(e.data.info))),console.log(e.data.message)})}),n.doLogin=function(){n.error="",o.login(n.loginData.username,n.loginData.password).then(function(e){e.data.success?(r.localStorage.setItem("token",e.data.token),t.path("/")):n.error=e.data.message,console.log(e.data.message)})},n.doLogout=function(){o.logout(),console.log("Token removed. You have successfully logged out."),n.user="",t.path("/login"),n.loggedIn=!1}}]),angular.module("profileCtrl",["userService"]).controller("createController",["User",function(e){var t=this;t.type="create",t.saveUser=function(){t.message="",e.create(t.userData).then(function(e){e.data.success&&(t.userData={}),t.message=e.data.message})}}]).controller("viewController",["$routeParams","User",function(e,t){var r=this;r.type="view",t.get(e.user_id).then(function(e){console.log(e),e.data.success&&(r.userData=e.data.info),console.log(e.data.message)})}]).controller("editController",["$routeParams","User",function(e,t){var r=this;r.type="edit",t.get(e.user_id).then(function(e){e.data.success&&(r.userData=e.data.info),console.log(e.data.message)}),r.saveUser=function(){r.message="",t.update(e.user_id,r.userData).then(function(e){e.data.success&&(r.userData={}),r.message=e.data.message})}}]),angular.module("authService",[]).factory("Auth",["$http","$q","$window",function(e,t,r){var o={};return o.login=function(t,r){return e.post("/api/authenticate",{username:t,password:r})},o.logout=function(){r.localStorage.removeItem("token")},o.isLoggedIn=function(){return!!r.localStorage.getItem("token")},o.getUser=function(){return e.get("/api/me")},o}]).factory("AuthInterceptor",["$q","$location","$window",function(e,t,r){var o={};return o.request=function(e){var t=r.localStorage.getItem("token");return t&&(e.headers["x-access-token"]=t),e},o.responseError=function(e){return 401==e.status&&(console.log("Interceptor caught 401, redirecting"),r.localStorage.removeItem("token")),403==e.status&&(console.log("Interceptor caught 403, redirecting"),r.localStorage.removeItem("token"),t.path("/login")),e},o}]),angular.module("userService",[]).factory("User",["$http",function(e){var t={};return t.get=function(t){return e.get("/api/users/"+t)},t.all=function(){return e.get("/api/users/")},t.create=function(t){return e.post("/api/users/",t)},t.update=function(t,r){return e.put("/api/users/"+t,r)},t["delete"]=function(t){return e["delete"]("/api/users/"+t)},t}]),angular.module("adminService",["authService"]).service("adminService",["$q","$timeout","Auth",function(e,t,r){return{isAdmin:function(){var t=e.defer();return r.getUser().then(function(e){e.data.info.admin?t.resolve({success:!0,message:"200 - OK: Access permitted."}):t.reject({success:!1,message:"403 - Forbidden: Not an admin."})}),t.promise}}}]);