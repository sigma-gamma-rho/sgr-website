angular.module("userApp",["ngAnimate","app.routes","authFactory","interceptFactory","crudFactory","adminService","formService","profileService","chatService","rssService","mainCtrl","adminCtrl","profileCtrl","chatCtrl","fileDirective"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptor")}]),angular.module("app.routes",["ngRoute"]).config(["$routeProvider","$locationProvider",function(e,t){e.when("/",{templateUrl:"views/home.html"}).when("/login",{templateUrl:"views/login.html",controller:"mainController",controllerAs:"login"}).when("/error",{templateUrl:"views/error.html"}).when("/admin/users",{templateUrl:"views/all.html",controller:"adminController",controllerAs:"admin",resolve:{message:["adminService",function(e){return e.isAdmin()}]}}).when("/admin/users/create",{templateUrl:"views/profile.html",controller:"profileController",controllerAs:"profile",resolve:{message:["adminService",function(e){return e.isAdmin()}],type:function(){return"create"}}}).when("/admin/users/edit/:user_id",{templateUrl:"views/profile.html",controller:"profileController",controllerAs:"profile",resolve:{message:["adminService",function(e){return e.isAdmin()}],type:function(){return"edit"}}}).when("/admin/users/view/:user_id",{templateUrl:"views/profile.html",controller:"profileController",controllerAs:"profile",resolve:{message:["adminService",function(e){return e.isAdmin()}],type:function(){return"view"}}}).when("/users/profile/:user_id",{templateUrl:"views/profile.html",controller:"userProfileController",controllerAs:"user"}).when("/regional",{templateUrl:"views/regional.html",controller:"chatController",controllerAs:"chat"}).otherwise({redirectTo:"/"}),t.html5Mode(!0)}]),angular.module("adminCtrl",["crudFactory"]).controller("adminController",["Crud","Auth","message",function(e,t,n){console.log("message"+JSON.stringify(n));var r=this;r.startSpinner=function(){r.processing=!0},r.endSpinner=function(){r.processing=!1},r.init=function(){r.startSpinner(),e.all().then(function(e){e.data.success&&(r.users=e.data.info),console.log(e.data.message),r.endSpinner()})},r.init(),r["delete"]=function(t,n){r.startSpinner(),e["delete"](t).then(function(t){console.log(t.data.message),e.deletePicture(n).then(function(e){console.log(e.data.message),r.endSpinner()})}),r.init()},r.resetPicture=function(t,n){r.startSpinner(),e.deletePicture(n).then(function(e){console.log(e.data.message)}),r.userData={picture:"default.jpg"},e.update(t,r.userData).then(function(e){console.log(e.data.message),r.endSpinner(),r.init()})}}]),angular.module("chatCtrl",["chatService","rssService"]).controller("chatController",["$scope","socket",function(e,t){t.on("init",function(t){e.name=t.name,e.users=t.users}),t.on("send:message",function(t){e.messages.push(t)}),t.on("change:name",function(e){n(e.oldName,e.newName)}),t.on("load:old:messages",function(t){for(var n=t.length-1;n>=0;n--)e.messages.push({user:t[n].name,text:t[n].msg})}),t.on("user:join",function(t){e.messages.push({user:"",text:"User "+t.name+" has joined."}),e.users.push(t.name)}),t.on("user:left",function(t){e.messages.push({user:"chatroom",text:"User "+t.name+" has left."});var n,r;for(n=0;n<e.users.length;n++)if(r=e.users[n],r===t.name){e.users.splice(n,1);break}});var n=function(t,n){var r;for(r=0;r<e.users.length;r++)e.users[r]===t&&(e.users[r]=n);e.messages.push({user:"chatroom",text:"User "+t+" is now known as "+n+"."})};e.changeName=function(){t.emit("change:name",{name:e.newName},function(t){t?(n(e.name,e.newName),e.name=e.newName,e.newName=""):alert("There was an error changing your name")})},e.messages=[],e.sendMessage=function(){t.emit("send:message",{message:e.message}),e.messages.push({user:e.name,text:e.message}),e.message=""}}]),angular.module("mainCtrl",[]).controller("mainController",["$rootScope","$location","$window","Auth",function(e,t,n,r){var o=this;o.loggedIn=r.isLoggedIn(),e.$on("$routeChangeError",function(e,n,r,o){console.log(o),t.path("/error")}),e.$on("$routeChangeStart",function(){o.loggedIn=r.isLoggedIn(),o.loggedIn&&n.localStorage.getItem("token")&&r.getUser().then(function(e){e.data.success&&(o.user=e.data.info,console.log(JSON.stringify(e.data.info))),console.log(e.data.message)})}),o.doLogin=function(){o.error="",r.login(o.loginData.username,o.loginData.password).then(function(e){e.data.success?(n.localStorage.setItem("token",e.data.token),t.path("/")):o.error=e.data.message,console.log(e.data.message)})},o.doLogout=function(){r.logout(),console.log("Token removed. You have successfully logged out."),o.user="",t.path("/login"),o.loggedIn=!1}}]),angular.module("profileCtrl",["crudFactory","profileService","formService"]).controller("profileController",["$scope","$routeParams","Crud","$location","type","fileUpload","profileService",function(e,t,n,r,o,s,a){var i=this;i.resetMessages=function(){i.dataMessage="",i.pictureMessage=""},i.startSpinner=function(){i.processing=!0},i.endSpinner=function(){i.processing=!1},i.init=function(){console.log("Page type is: "+o),i.startSpinner(),i.resetMessages(),"create"===o?(i.type="create",i.readPicture("default.jpg")):"edit"===o?(i.type="edit",i.getUser()):"view"===o&&(i.type="view",i.getUser())},i.saveUser=function(){"create"===o?i.postUser():"edit"===o&&i.putUser()},i.getUser=function(){n.get(t.user_id).then(function(e){e.data.success&&(i.userData=e.data.info,i.readPicture(i.userData.picture)),i.dataMessage=a.setMessages(e),console.log(e.data.message)})},i.putUser=function(){i.resetMessages(),i.startSpinner(),n.update(t.user_id,i.userData).then(function(e){e.data.success&&i.uploadPicture(t.user_id,"PUT"),i.dataMessage=a.setMessages(e)})},i.postUser=function(){i.startSpinner(),i.resetMessages(),n.create(i.userData).then(function(e){e.data.success?i.uploadPicture(e.data.userId,"POST"):i.endSpinner(),i.dataMessage=a.setMessages(e)})},i.readPicture=function(t){n.readPicture(t).then(function(t){t.data.success&&(e.image_source="data:image/jpeg;base64, "+t.data.data),i.pictureMessage=a.setMessages(t),i.endSpinner()})},i.uploadPicture=function(t,n){var r=(e.myFile||e.currentFile,"/api/pictures/"+t);s.upload(n,e.currentFile,r,function(e,t,n,r){var s={};s.data=e,i.pictureMessage=a.setMessages(s),i.endSpinner(),"create"===o&&(i.userData="")})},e.setFile=function(t){e.currentFile=t.files[0],console.log(e.currentFile);var n=new FileReader;n.onload=function(t){e.image_source=t.target.result,e.$apply()},e.currentFile&&e.currentFile.type.match("image.*")?(console.log("File type OK."),n.readAsDataURL(t.files[0])):console.log("File type not supported.")},i.init()}]),angular.module("fileDirective",[]).directive("fileDirective",["$parse",function(e){return{restrict:"A",link:function(t,n,r){var o=e(r.fileDirective),s=o.assign;n.bind("change",function(){t.$apply(function(){s(t,n[0].files[0])})})}}}]),angular.module("authFactory",[]).factory("Auth",["$http","$q","$window",function(e,t,n){var r={};return r.login=function(t,n){return e.post("/api/authenticate",{username:t,password:n})},r.logout=function(){n.localStorage.removeItem("token")},r.isLoggedIn=function(){return!!n.localStorage.getItem("token")},r.getUser=function(){return e.get("/api/me")},r}]),angular.module("chatService",[]).factory("socket",["$rootScope",function(e){var t=io.connect();return{on:function(n,r){t.on(n,function(){var n=arguments;e.$apply(function(){r.apply(t,n)})})},emit:function(n,r,o){t.emit(n,r,function(){var n=arguments;e.$apply(function(){o&&o.apply(t,n)})})}}}]),angular.module("crudFactory",[]).factory("Crud",["$http",function(e){var t={};return t.get=function(t){return e.get("/api/users/"+t)},t.all=function(){return e.get("/api/users/")},t.create=function(t){return e.post("/api/users/",t)},t.update=function(t,n){return e.put("/api/users/"+t,n)},t["delete"]=function(t){return e["delete"]("/api/users/"+t)},t.deletePicture=function(t){return e["delete"]("/api/pictures/"+t)},t.readPicture=function(t){return e.get("/api/pictures/"+t)},t}]),angular.module("interceptFactory",[]).factory("AuthInterceptor",["$q","$location","$window",function(e,t,n){var r={};return r.request=function(e){var t=n.localStorage.getItem("token");return t&&(e.headers["x-access-token"]=t),e},r.responseError=function(e){return 401==e.status&&(console.log("Interceptor caught 401, redirecting"),n.localStorage.removeItem("token")),403==e.status&&(console.log("Interceptor caught 403, redirecting"),n.localStorage.removeItem("token"),t.path("/login")),e},r}]),angular.module("rssService",[]).factory("rss",function(){var e=require("ortoo-feedparser"),t="https://news.google.com/news?cf=all&hl=en&pz=1&ned=us&output=rss",n=e.parseUrl(t).on("article",function(e){console.log("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"),console.log(e.date),console.log("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~")});return n}),angular.module("adminService",["authFactory"]).service("adminService",["$q","$timeout","Auth",function(e,t,n){return{isAdmin:function(){var t=e.defer();return n.getUser().then(function(e){e.data.info.admin?t.resolve({success:!0,message:"200 - OK: Access permitted."}):t.reject({success:!1,message:"403 - Forbidden: Not an admin."})}),t.promise}}}]),angular.module("formService",[]).service("fileUpload",["$http",function(e){this.upload=function(t,n,r,o){var s=new FormData;s.append("file",n),"POST"===t&&e.post(r,s,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).success(o).error(o),"PUT"===t&&e.put(r,s,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).success(o).error(o)}}]),angular.module("profileService",[]).service("profileService",function(){return{setMessages:function(e){return e.data.success?console.log("Success:"+e.data.message):console.log("Error:"+e.data.message),e.data.message}}});