angular.module("userApp",["authService","mainCtrl","ngAnimate","app.routes","authService","userService","adminCtrl"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptor")}]),angular.module("app.routes",["ngRoute"]).config(["$routeProvider","$locationProvider",function(e,o){e.when("/",{templateUrl:"views/home.html"}).when("/login",{templateUrl:"views/login.html",controller:"mainController",controllerAs:"login"}).when("/admin",{templateUrl:"views/all.html",controller:"adminController",controllerAs:"admin"}).when("/users/create",{templateUrl:"views/single.html",controller:"userCreateController",controllerAs:"user"}).when("/users/:user_id",{templateUrl:"views/single.html",controller:"userEditController",controllerAs:"user"}).when("/users/profile/:user_id",{templateUrl:"views/profile.html",controller:"userProfileController",controllerAs:"user"}).otherwise({redirectTo:"/login"}),o.html5Mode(!0)}]),angular.module("adminCtrl",["userService"]).controller("adminController",["User","Auth",function(e,o){var t=this;t.init=function(){e.all().then(function(e){console.log(e),e.data.success&&(t.users=e.data.info),console.log(e.data.message)})},t.init(),t.deleteUser=function(e){t["delete"](e),t.init()},t["delete"]=function(o){e["delete"](o).then(function(e){console.log(e.data.message)})}}]).controller("userCreateController",["User",function(e){var o=this;o.type="create",o.saveUser=function(){o.processing=!0,o.message="",e.create(o.userData).success(function(e){o.processing=!1,o.userData={},o.message=e.message})}}]).controller("userProfileController",["$routeParams","User",function(e,o){var t=this;o.get(e.user_id).success(function(e){t.userData=e})}]).controller("userEditController",["$routeParams","User",function(e,o){var t=this;t.type="edit",o.get(e.user_id).success(function(e){t.userData=e}),t.saveUser=function(){t.processing=!0,t.message="",o.update(e.user_id,t.userData).success(function(e){t.processing=!1,t.userData={},t.message=e.message})}}]),angular.module("mainCtrl",[]).controller("mainController",["$rootScope","$location","$window","Auth",function(e,o,t,r){var n=this;n.loggedIn=r.isLoggedIn(),e.$on("$routeChangeStart",function(){n.loggedIn=r.isLoggedIn(),n.loggedIn&&t.localStorage.getItem("token")&&r.getUser().success(function(e){e.success&&(n.user=e.info,console.log(JSON.stringify(e.info)),console.log(e.message))}).error(function(e){console.log(e.message)})}),n.doLogin=function(){n.processing=!0,n.error="",r.login(n.loginData.username,n.loginData.password).success(function(e){e.success&&(n.processing=!1,t.localStorage.setItem("token",e.token),o.path("/"),console.log(e.message))}).error(function(e){e.success||(n.error=e.message,console.log(e.message))})},n.doLogout=function(){r.logout(),console.log("Token removed. You have successfully logged out."),n.user="",o.path("/login"),n.loggedIn=!1},n.createSample=function(){r.createSampleUser()}}]),angular.module("authService",[]).factory("Auth",["$http","$q","$window",function(e,o,t){var r={};return r.login=function(o,t){return e.post("/api/authenticate",{username:o,password:t})},r.logout=function(){t.localStorage.removeItem("token")},r.isLoggedIn=function(){return!!t.localStorage.getItem("token")},r.getUser=function(){return e.get("/api/me")},r}]).factory("AuthInterceptor",["$q","$location","$window",function(e,o,t){var r={};return r.request=function(e){var o=t.localStorage.getItem("token");return o&&(e.headers["x-access-token"]=o),e},r.responseError=function(e){return 401==e.status&&(console.log("Interceptor caught 401, redirecting"),t.localStorage.removeItem("token")),403==e.status&&(console.log("Interceptor caught 403, redirecting"),t.localStorage.removeItem("token"),o.path("/login")),e},r}]),angular.module("userService",[]).factory("User",["$http",function(e){var o={};return o.get=function(o){return e.get("/api/users/"+o)},o.all=function(){return e.get("/api/users/")},o.create=function(o){return e.post("/api/users/",o)},o.update=function(o,t){return e.put("/api/users/"+o,t)},o["delete"]=function(o){return e["delete"]("/api/users/"+o)},o}]);