angular.module("userApp",["authService","mainCtrl","ngAnimate","app.routes","authService","userService","adminCtrl","chatCtrl","chatService"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptor")}]),angular.module("app.routes",["ngRoute"]).config(["$routeProvider","$locationProvider",function(e,n){e.when("/",{templateUrl:"views/home.html"}).when("/login",{templateUrl:"views/login.html",controller:"mainController",controllerAs:"login"}).when("/admin",{templateUrl:"views/all.html",controller:"adminController",controllerAs:"admin"}).when("/users/create",{templateUrl:"views/single.html",controller:"userCreateController",controllerAs:"user"}).when("/users/:user_id",{templateUrl:"views/single.html",controller:"userEditController",controllerAs:"user"}).when("/users/profile/:user_id",{templateUrl:"views/profile.html",controller:"userProfileController",controllerAs:"user"}).when("/regional",{templateUrl:"views/regional.html",controller:"chatController",controllerAs:"chat"}).otherwise({redirectTo:"/login"}),n.html5Mode(!0)}]),angular.module("adminCtrl",["userService"]).controller("adminController",["User",function(e){var n=this;n.init=function(){e.all().then(function(e){console.log(e),e.data.success&&(n.users=e.data.info),console.log(e.data.message)})},n.init(),n.deleteUser=function(e){n["delete"](e),n.init()},n["delete"]=function(n){e["delete"](n).then(function(e){console.log(e.data.message)})}}]).controller("userCreateController",["User",function(e){var n=this;n.type="create",n.saveUser=function(){n.processing=!0,n.message="",e.create(n.userData).success(function(e){n.processing=!1,n.userData={},n.message=e.message})}}]).controller("userProfileController",["$routeParams","User",function(e,n){var o=this;n.get(e.user_id).success(function(e){o.userData=e})}]).controller("userEditController",["$routeParams","User",function(e,n){var o=this;o.type="edit",n.get(e.user_id).success(function(e){o.userData=e}),o.saveUser=function(){o.processing=!0,o.message="",n.update(e.user_id,o.userData).success(function(e){o.processing=!1,o.userData={},o.message=e.message})}}]),angular.module("chatCtrl",["chatService"]).controller("chatController",["$scope","socket",function(e,n){n.on("init",function(n){e.name=n.name,e.users=n.users}),n.on("send:message",function(n){e.messages.push(n)}),n.on("change:name",function(e){o(e.oldName,e.newName)}),n.on("user:join",function(n){e.messages.push({user:"chatroom",text:"User "+n.name+" has joined."}),e.users.push(n.name)}),n.on("user:left",function(n){e.messages.push({user:"chatroom",text:"User "+n.name+" has left."});var o,t;for(o=0;o<e.users.length;o++)if(t=e.users[o],t===n.name){e.users.splice(o,1);break}});var o=function(n,o){var t;for(t=0;t<e.users.length;t++)e.users[t]===n&&(e.users[t]=o);e.messages.push({user:"chatroom",text:"User "+n+" is now known as "+o+"."})};e.changeName=function(){n.emit("change:name",{name:e.newName},function(n){n?(o(e.name,e.newName),e.name=e.newName,e.newName=""):alert("There was an error changing your name")})},e.messages=[],e.sendMessage=function(){n.emit("send:message",{message:e.message}),e.messages.push({user:e.name,text:e.message}),e.message=""}}]),angular.module("mainCtrl",[]).controller("mainController",["$rootScope","$location","$window","Auth",function(e,n,o,t){var r=this;r.loggedIn=t.isLoggedIn(),e.$on("$routeChangeStart",function(){r.loggedIn=t.isLoggedIn(),r.loggedIn&&o.localStorage.getItem("token")&&t.getUser().success(function(e){e.success&&(r.user=e.info,console.log(JSON.stringify(e.info)),console.log(e.message))}).error(function(e){console.log(e.message)})}),r.doLogin=function(){r.processing=!0,r.error="",t.login(r.loginData.username,r.loginData.password).success(function(e){e.success&&(r.processing=!1,o.localStorage.setItem("token",e.token),n.path("/"),console.log(e.message))}).error(function(e){e.success||(r.error=e.message,console.log(e.message))})},r.doLogout=function(){t.logout(),console.log("Token removed. You have successfully logged out."),r.user="",n.path("/login"),r.loggedIn=!1},r.createSample=function(){t.createSampleUser()}}]),angular.module("authService",[]).factory("Auth",["$http","$q","$window",function(e,n,o){var t={};return t.login=function(n,o){return e.post("/api/authenticate",{username:n,password:o})},t.logout=function(){o.localStorage.removeItem("token")},t.isLoggedIn=function(){return!!o.localStorage.getItem("token")},t.getUser=function(){return e.get("/api/me")},t.createSampleUser=function(){e.post("/api/sample")},t}]).factory("AuthInterceptor",["$q","$location","$window",function(e,n,o){var t={};return t.request=function(e){var n=o.localStorage.getItem("token");return n&&(e.headers["x-access-token"]=n),e},t.responseError=function(t){return 401==t.status&&o.localStorage.removeItem("token"),403==t.status&&(o.localStorage.removeItem("token"),n.path("/login")),e.reject(t)},t}]),angular.module("chatService",[]).factory("socket",["$rootScope",function(e){var n=io.connect();return{on:function(o,t){n.on(o,function(){var o=arguments;e.$apply(function(){t.apply(n,o)})})},emit:function(o,t,r){n.emit(o,t,function(){var o=arguments;e.$apply(function(){r&&r.apply(n,o)})})}}}]),angular.module("userService",[]).factory("User",["$http",function(e){var n={};return n.get=function(n){return e.get("/api/users/"+n)},n.all=function(){return e.get("/api/users/")},n.create=function(n){return e.post("/api/users/",n)},n.update=function(n,o){return e.put("/api/users/"+n,o)},n["delete"]=function(n){return e["delete"]("/api/users/"+n)},n}]);