angular.module("userApp",["ngAnimate","app.routes","authFactory","interceptFactory","crudFactory","adminService","formService","mainCtrl","adminCtrl","profileCtrl","profileService","fileDirective"]).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptor")}]),angular.module("adminCtrl",["crudFactory"]).controller("adminController",["Crud","Auth","message",function(e,t,r){console.log("message"+JSON.stringify(r));var n=this;n.startSpinner=function(){n.processing=!0},n.endSpinner=function(){n.processing=!1},n.init=function(){n.startSpinner(),e.all().then(function(e){e.data.success&&(n.users=e.data.info),console.log(e.data.message),n.endSpinner()})},n.init(),n["delete"]=function(t,r){n.startSpinner(),e["delete"](t).then(function(t){console.log(t.data.message),e.deletePicture(r).then(function(e){console.log(e.data.message),n.endSpinner()})}),n.init()},n.resetPicture=function(t,r){n.startSpinner(),e.deletePicture(r).then(function(e){console.log(e.data.message)}),n.userData={picture:"default.jpg"},e.update(t,n.userData).then(function(e){console.log(e.data.message),n.endSpinner(),n.init()})}}]),angular.module("mainCtrl",[]).controller("mainController",["$rootScope","$location","$window","Auth",function(e,t,r,n){var o=this;o.loggedIn=n.isLoggedIn(),e.$on("$routeChangeError",function(e,r,n,o){console.log(o),t.path("/error")}),e.$on("$routeChangeStart",function(){o.loggedIn=n.isLoggedIn(),o.loggedIn&&r.localStorage.getItem("token")&&n.getUser().then(function(e){e.data.success&&(o.user=e.data.info,console.log(JSON.stringify(e.data.info))),console.log(e.data.message)})}),o.doLogin=function(){o.error="",n.login(o.loginData.username,o.loginData.password).then(function(e){e.data.success?(r.localStorage.setItem("token",e.data.token),t.path("/")):o.error=e.data.message,console.log(e.data.message)})},o.doLogout=function(){n.logout(),console.log("Token removed. You have successfully logged out."),o.user="",t.path("/login"),o.loggedIn=!1}}]),angular.module("profileCtrl",["crudFactory","profileService","formService"]).controller("profileController",["$scope","$routeParams","Crud","$location","type","fileUpload","profileService",function(e,t,r,n,o,a,i){var s=this;s.resetMessages=function(){s.dataMessage="",s.pictureMessage=""},s.startSpinner=function(){s.processing=!0},s.endSpinner=function(){s.processing=!1},s.init=function(){console.log("Page type is: "+o),s.startSpinner(),s.resetMessages(),"create"===o?(s.type="create",s.readPicture("default.jpg")):"edit"===o?(s.type="edit",s.getUser()):"view"===o&&(s.type="view",s.getUser())},s.saveUser=function(){"create"===o?s.postUser():"edit"===o&&s.putUser()},s.getUser=function(){r.get(t.user_id).then(function(e){e.data.success&&(s.userData=e.data.info,s.readPicture(s.userData.picture)),s.dataMessage=i.setMessages(e),console.log(e.data.message)})},s.putUser=function(){s.resetMessages(),s.startSpinner(),r.update(t.user_id,s.userData).then(function(e){e.data.success&&s.uploadPicture(t.user_id,"PUT"),s.dataMessage=i.setMessages(e)})},s.postUser=function(){s.startSpinner(),s.resetMessages(),r.create(s.userData).then(function(e){e.data.success?s.uploadPicture(e.data.userId,"POST"):s.endSpinner(),s.dataMessage=i.setMessages(e)})},s.readPicture=function(t){r.readPicture(t).then(function(t){t.data.success&&(e.image_source="data:image/jpeg;base64, "+t.data.data),s.pictureMessage=i.setMessages(t),s.endSpinner()})},s.uploadPicture=function(t,r){var n=(e.myFile||e.currentFile,"/api/pictures/"+t);a.upload(r,e.currentFile,n,function(e,t,r,n){var a={};a.data=e,s.pictureMessage=i.setMessages(a),s.endSpinner(),"create"===o&&(s.userData="")})},e.setFile=function(t){e.currentFile=t.files[0],console.log(e.currentFile);var r=new FileReader;r.onload=function(t){e.image_source=t.target.result,e.$apply()},e.currentFile&&e.currentFile.type.match("image.*")?(console.log("File type OK."),r.readAsDataURL(t.files[0])):console.log("File type not supported.")},s.init()}]),angular.module("app.routes",["ngRoute"]).config(["$routeProvider","$locationProvider",function(e,t){e.when("/",{templateUrl:"views/home.html"}).when("/login",{templateUrl:"views/login.html",controller:"mainController",controllerAs:"login"}).when("/error",{templateUrl:"views/error.html"}).when("/admin/users",{templateUrl:"views/all.html",controller:"adminController",controllerAs:"admin",resolve:{message:["adminService",function(e){return e.isAdmin()}]}}).when("/admin/users/create",{templateUrl:"views/profile.html",controller:"profileController",controllerAs:"profile",resolve:{message:["adminService",function(e){return e.isAdmin()}],type:function(){return"create"}}}).when("/admin/users/edit/:user_id",{templateUrl:"views/profile.html",controller:"profileController",controllerAs:"profile",resolve:{message:["adminService",function(e){return e.isAdmin()}],type:function(){return"edit"}}}).when("/admin/users/view/:user_id",{templateUrl:"views/profile.html",controller:"profileController",controllerAs:"profile",resolve:{message:["adminService",function(e){return e.isAdmin()}],type:function(){return"view"}}}).otherwise({redirectTo:"/"}),t.html5Mode(!0)}]),angular.module("fileDirective",[]).directive("fileDirective",["$parse",function(e){return{restrict:"A",link:function(t,r,n){var o=e(n.fileDirective),a=o.assign;r.bind("change",function(){t.$apply(function(){a(t,r[0].files[0])})})}}}]),angular.module("authFactory",[]).factory("Auth",["$http","$q","$window",function(e,t,r){var n={};return n.login=function(t,r){return e.post("/api/authenticate",{username:t,password:r})},n.logout=function(){r.localStorage.removeItem("token")},n.isLoggedIn=function(){return!!r.localStorage.getItem("token")},n.getUser=function(){return e.get("/api/me")},n}]),angular.module("crudFactory",[]).factory("Crud",["$http",function(e){var t={};return t.get=function(t){return e.get("/api/users/"+t)},t.all=function(){return e.get("/api/users/")},t.create=function(t){return e.post("/api/users/",t)},t.update=function(t,r){return e.put("/api/users/"+t,r)},t["delete"]=function(t){return e["delete"]("/api/users/"+t)},t.deletePicture=function(t){return e["delete"]("/api/pictures/"+t)},t.readPicture=function(t){return e.get("/api/pictures/"+t)},t}]),angular.module("interceptFactory",[]).factory("AuthInterceptor",["$q","$location","$window",function(e,t,r){var n={};return n.request=function(e){var t=r.localStorage.getItem("token");return t&&(e.headers["x-access-token"]=t),e},n.responseError=function(e){return 401==e.status&&(console.log("Interceptor caught 401, redirecting"),r.localStorage.removeItem("token")),403==e.status&&(console.log("Interceptor caught 403, redirecting"),r.localStorage.removeItem("token"),t.path("/login")),e},n}]),angular.module("adminService",["authFactory"]).service("adminService",["$q","$timeout","Auth",function(e,t,r){return{isAdmin:function(){var t=e.defer();return r.getUser().then(function(e){e.data.info.admin?t.resolve({success:!0,message:"200 - OK: Access permitted."}):t.reject({success:!1,message:"403 - Forbidden: Not an admin."})}),t.promise}}}]),angular.module("formService",[]).service("fileUpload",["$http",function(e){this.upload=function(t,r,n,o){var a=new FormData;a.append("file",r),"POST"===t&&e.post(n,a,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).success(o).error(o),"PUT"===t&&e.put(n,a,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).success(o).error(o)}}]),angular.module("profileService",[]).service("profileService",function(){return{setMessages:function(e){return e.data.success?console.log("Success:"+e.data.message):console.log("Error:"+e.data.message),e.data.message}}});